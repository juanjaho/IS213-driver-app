version: "3.8"


services:
# For Message Queue Kafka
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9093:9093'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
# End of Message Queue Kafka

  customer:
    build:
      context: ./customer
      dockerfile: Dockerfile
    image: jsebastian2020/customer:proj
    restart: always
    environment:
      PYTHONUNBUFFERED: 1

  loadDashboard:
    build:
      context: ./load_dashboard
      dockerfile: Dockerfile
    image: jsebastian2020/load_dashboard:proj
    restart: always
    environment:
      loginURL : 'http://login:5001/authenticate'
      driverURL : 'http://driver:5002/driver'
      parcelURL : 'http://parcel:5003/parcel'
      PYTHONUNBUFFERED: 1
    ports:
      - "5000:5000"

  getDeliveryAddresses:
    build:
      context: ./get_delivery_addresses
      dockerfile: Dockerfile
    image: jsebastian2020/get_delivery_addresses:proj
    restart: always
    environment:
      customerURL : 'http://customer:5004/customer'
      PYTHONUNBUFFERED: 1
    ports:
      - "5010:5010"
  updateParcelStatus:
    build:
      context: ./update_parcel_status
      dockerfile: Dockerfile
    image: jsebastian2020/update_parcel_status:proj
    restart: always
    environment:
      customerURL : 'http://customer:5004/customer'
      parcelURL : 'http://parcel:5003/parcel'
      PYTHONUNBUFFERED: 1
    ports:
      - "5020:5020"


