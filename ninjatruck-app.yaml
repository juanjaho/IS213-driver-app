apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: getdeliveryaddresses
  name: getdeliveryaddresses
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: getdeliveryaddresses
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/kong-net: "true"
        io.kompose.service: getdeliveryaddresses
    spec:
      containers:
        - env:
            - name: customerURL
              value: http://customer:5004/customer
          image: quinncheong/get-delivery-address:1.0.0
          name: get-delivery-addresses
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  ports:
    - name: "9093"
      port: 9093
      targetPort: 9093
  selector:
    io.kompose.service: kafka
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: driver
  name: driver
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: driver
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/kong-net: "true"
        io.kompose.service: driver
    spec:
      containers:
        - image: quinncheong/driver:1.0.0
          name: driver
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: customer
  name: customer
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: customer
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/kong-net: "true"
        io.kompose.service: customer
    spec:
      containers:
        - image: quinncheong/customer:1.0.0
          name: customer
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: email
  name: email
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: email
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/kong-net: "true"
        io.kompose.service: email
    spec:
      containers:
        - image: quinncheong/email:1.0.0
          name: email
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: kong-database
  name: kong-database
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kong-database
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/kong-net: "true"
        io.kompose.service: kong-database
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: kong
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_USER
              value: kong
          image: postgres:9.6
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - kong
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: kong-database
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pgdata
      restartPolicy: Always
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: kong-database
  name: kong-database
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: kong-database
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: kong
  name: kong
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kong
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/kong-net: "true"
        io.kompose.service: kong
    spec:
      containers:
        - env:
            - name: KONG_ADMIN_LISTEN
              value: 0.0.0.0:8001
            - name: KONG_DATABASE
              value: postgres
            - name: KONG_PG_HOST
              value: kong-database
            - name: KONG_PG_PASSWORD
              value: password
            - name: KONG_PG_USER
              value: kong
            - name: KONG_PROXY_LISTEN
              value: 0.0.0.0:8000
          image: kong:2.0.4
          name: kong
          ports:
            - containerPort: 8000
          resources: {}
      restartPolicy: Always
status: 
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.network/kong-net: "true"
    io.kompose.service: kong-migration
  name: kong-migration
spec:
  containers:
    - args:
        - kong
        - migrations
        - bootstrap
      env:
        - name: KONG_DATABASE
          value: postgres
        - name: KONG_PG_HOST
          value: kong-database
        - name: KONG_PG_PASSWORD
          value: password
        - name: KONG_PG_USER
          value: kong
      image: kong:2.0.4
      name: kong-migration
      resources: {}
  restartPolicy: OnFailure
status: {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: kong-net
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              io.kompose.network/kong-net: "true"
  podSelector:
    matchLabels:
      io.kompose.network/kong-net: "true"
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: kong
  name: kong
spec:
  type: LoadBalancer 
  ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
  selector:
    io.kompose.service: kong
status:
  loadBalancer: {}
--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: konga
  name: konga
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: konga
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/kong-net: "true"
        io.kompose.service: konga
    spec:
      containers:
        - env:
            - name: DB_ADAPTER
              value: postgres
            - name: DB_DATABASE
              value: konga_db
            - name: DB_HOST
              value: kong-database
            - name: DB_PASSWORD
              value: password
            - name: DB_USER
              value: kong
          image: pantsel/konga
          name: konga
          ports:
            - containerPort: 1337
          resources: {}
          volumeMounts:
            - mountPath: /app/kongadata
              name: kongadata
      restartPolicy: Always
      volumes:
        - name: kongadata
          persistentVolumeClaim:
            claimName: kongadata
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: konga
  name: konga
spec:
  type: LoadBalancer
  ports:
    - name: "1337"
      port: 1337
      targetPort: 1337
  selector:
    io.kompose.service: konga
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: kongadata
  name: kongadata
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: loaddashboard
  name: loaddashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: loaddashboard
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/kong-net: "true"
        io.kompose.service: loaddashboard
    spec:
      containers:
        - env:
            - name: driverURL
              value: http://driver:5002/driver
            - name: loginURL
              value: http://login:5001/authenticate
            - name: parcelURL
              value: http://parcel:5003/parcel
          image: quinncheong/load-dashboard:1.0.0
          name: load-dashboard
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: login
  name: login
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: login
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/kong-net: "true"
        io.kompose.service: login
    spec:
      containers:
        - image: quinncheong/login:1.0.0
          name: login
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: parcel
  name: parcel
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: parcel
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/kong-net: "true"
        io.kompose.service: parcel
    spec:
      containers:
        - image: quinncheong/parcel:1.0.0
          name: parcel
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: pgdata
  name: pgdata
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq-data
  name: rabbitmq-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/kong-net: "true"
        io.kompose.service: rabbitmq
    spec:
      containers:
        - image: rabbitmq:3-management
          name: rabbitmq
          ports:
            - containerPort: 15672
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-data
      hostname: esd-rabbit
      restartPolicy: Always
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-data
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  ports:
    - name: "15672"
      port: 15672
      targetPort: 15672
  selector:
    io.kompose.service: rabbitmq
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: sms
  name: sms
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: sms
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/kong-net: "true"
        io.kompose.service: sms
    spec:
      containers:
        - image: quinncheong/sms:1.0.0
          name: sms
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: updateparcelstatus
  name: updateparcelstatus
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: updateparcelstatus
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/kong-net: "true"
        io.kompose.service: updateparcelstatus
    spec:
      containers:
        - env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: customerURL
              value: http://customer:5004/customer
            - name: parcelURL
              value: http://parcel:5003/parcel
            - name: rabbit_host
              value: rabbitmq
            - name: rabbit_port
              value: "5672"
          image: quinncheong/update-parcel-status:1.0.0
          name: update-parcel-status
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: zookeeper
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/kong-net: "true"
        io.kompose.service: zookeeper
    spec:
      containers:
        - env:
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
          image: bitnami/zookeeper:latest
          name: zookeeper
          ports:
            - containerPort: 2181
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: zookeeper
  name: zookeeper
spec:
  ports:
    - name: "2181"
      port: 2181
      targetPort: 2181
  selector:
    io.kompose.service: zookeeper
status:
  loadBalancer: {}



